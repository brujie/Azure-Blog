(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{426:function(e,r,n){"use strict";n.r(r);var a=n(31),t=Object(a.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"数组常用方法封装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组常用方法封装"}},[e._v("#")]),e._v(" 数组常用方法封装")]),e._v(" "),n("p",[e._v("**"),n("code",[e._v("map()")]),e._v("**方法创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function map(arr,callback){\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n        result.push(callback(arr[i],i));\n    }\n    return result;\n}\n")])])]),n("p",[n("strong",[n("code",[e._v("reduce()")])]),e._v(" 方法对数组中的每个元素按序执行一个由您提供的 "),n("strong",[e._v("reducer")]),e._v(" 函数，每一次运行 "),n("strong",[e._v("reducer")]),e._v(" 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function reduce(arr,callback,initVal){\n    let result = initVal;\n    for(let i=0;i<arr.length;i++){\n        result = callback(result,arr[i]);\n    }\n    return result;\n}\n")])])]),n("p",[e._v("**"),n("code",[e._v("filter()")]),e._v("**方法创建一个新数组，其包含通过所提供函数实现的测试的所有元素。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function filter(arr,callback){\n    let result = [];\n    for(let i=0;i<arr.length;i++){\n        let res = callback(arr[i],i);\n        if(res){\n            result.push(arr[i])\n        }\n    }\n    return result;\n}\n")])])]),n("p",[e._v("**"),n("code",[e._v("find()")]),e._v(" **方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 "),n("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/undefined",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("undefined")]),n("OutboundLink")],1),e._v("。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function find(arr,callback){\n    for(let i=0;i<arr.length;i++){\n        if(callback(arr[i],i)){\n            return arr[i]\n        }\n    }\n    return undefined;\n}\n\n")])])]),n("p",[e._v("**"),n("code",[e._v("findIndex()")]),e._v("**方法返回数组中满足提供的测试函数的第一个元素的 "),n("strong",[e._v("索引")]),e._v(" 。若没有找到对应元素则返回-1。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function findIndex(arr,callback){\n    for(let i=0;i<arr.length;i++){\n        if(callback(arr[i],i)){\n            return i;\n        }\n    }\n    return -1;\n}\n\n")])])]),n("p",[e._v("**"),n("code",[e._v("every()")]),e._v("**方法测试一个数组内的所有元素是否都能通过某个指定函数的测试。它返回一个布尔值。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function every(arr,callback){\n    let result = [];\n    let len = arr.length;\n    for(let i=0;i<len;i++){\n        if(callback(arr[i])){\n            result.push(true);\n        }\n    }\n    return result.length == len ? true:false;\n}\n\n")])])]),n("p",[n("strong",[n("code",[e._v("some()")])]),e._v(" 方法测试数组中是不是至少有 1 个元素通过了被提供的函数测试。它返回的是一个 Boolean 类型的值。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("function some(arr,callback){\n    for(let i=0;i<arr.length;i++){\n        if(callback(arr[i])){\n           return true;\n        }\n    }\n    return false;\n}\n")])])])])}),[],!1,null,null,null);r.default=t.exports}}]);