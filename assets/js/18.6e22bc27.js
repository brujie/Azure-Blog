(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{425:function(e,n,t){"use strict";t.r(n);var s=t(31),a=Object(s.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("webpack打包优化")]),e._v(" "),t("p",[e._v("以下配置在webpack3.1中使用,webpack4可能需要修改部分内容")]),e._v(" "),t("p",[e._v("插件")]),e._v(" "),t("p",[e._v("webpack4+ 使用")]),e._v(" "),t("p",[e._v("css样式抽离")]),e._v(" "),t("p",[e._v("作用:将less,scss,css文件打包到一个压缩文件中,html中进行link引入使用")]),e._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("npm")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" -D mini-css-extract-plugin\n")])])]),t("p",[e._v("HMR功能")]),e._v(" "),t("p",[e._v("作用:方便调试css")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" const webpack = require('webpack');\n devServer:{\n \thot:true, // 开启hot module replacement 功能\n \thotonly:true, // 即使HMR没有生效,浏览器也不会自动刷新\n },\n plugins: [\n        new webpack.HotModuleReplacementPlugin()\n ]\n")])])]),t("p",[e._v("静态资源文件拷贝")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const path = require('path')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\n\n// copy custom static assets\nnew CopyWebpackPlugin([\n  {\n    from: path.resolve(__dirname, '../static'),\n    to: config.build.assetsSubDirectory,\n    ignore: ['.*']\n  }\n])\n")])])]),t("p",[e._v("HtmlWebpackPlugin插件")]),e._v(" "),t("p",[e._v("作用:入口文件处理,资源文件的引入")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" const HtmlWebpackPlugin = require('html-webpack-plugin')\n\n new HtmlWebpackPlugin({\n  filename: 'index.html',\n  template: 'index.dev.html',\n  inject: true,\n  favicon: 'src/assets/images/favicon.ico'\n}),\n")])])]),t("p",[e._v("html-minifier")]),e._v(" "),t("p",[e._v("作用:压缩html | js  | css")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("new HtmlWebpackPlugin({\n  filename: process.env.NODE_ENV === 'testing'\n    ? 'index.html'\n    : config.build.index,\n  template: 'index.html',\n  inject: true,\n  favicon: 'src/assets/images/favicon.ico',\n  minify: {\n    removeComments: true,\n    collapseWhitespace: true,\n    removeAttributeQuotes: true\n    // more options:\n    // https://github.com/kangax/html-minifier#options-quick-reference\n  },\n  // necessary to consistently work with multiple chunks via CommonsChunkPlugin\n  chunksSortMode: 'dependency'\n}),\n")])])]),t("p",[e._v("压缩css代码")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("npm i -D optimize-css-assets-webpack-plugin\n// webpack 3及以下\nnpm i -D optimize-css-assets-webpack-plugin@3.2.0 \n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const OptimizeCSSPlugin = require('optimize-css-assets-webpack-plugin')\n\nplugin:[\n new OptimizeCSSPlugin({\n      cssProcessorOptions: {\n        safe: true\n      }\n    })\n]\n")])])]),t("p",[e._v("将样式从js中抽出,生成单独的.css样式文件(根据entry入口),通过link标签引入")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("const ExtractTextPlugin = require('extract-text-webpack-plugin')\nconst utils = require('./utils')\n\n\nplugin:[\n\tnew ExtractTextPlugin({\n      filename: utils.assetsPath('css/[name].[contenthash].css')\n    }),\n    new ExtractTextPlugin(\"styles.css\")\n    // 它将从每一个用到了require(\"*.css\")的entry chunks文件中抽离出css到单独的output文件\n]\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);